{"version":3,"file":"index.js","sources":["../src/components/SEOTitleFeedback.tsx","../src/components/SEODescriptionFeedback.tsx","../src/schemas/Schema.ts","../src/schemas/types/seo/list/metaAttribute/index.ts","../src/schemas/types/seo/list/metaTag/index.ts","../src/schemas/types/seo/list/openGraph/index.ts","../src/schemas/types/seo/list/twitter/index.ts","../src/schemas/types/index.ts","../src/plugin.ts"],"sourcesContent":["import { StringInputProps, useClient, set } from 'sanity';\nimport { useEffect } from 'react';\nimport { Stack, Text } from '@sanity/ui';\n\nconst SEOFeedback = (props: StringInputProps) => {\n  const { onChange, value, renderDefault } = props;\n  const client = useClient({ apiVersion: '2021-06-07' });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await client.fetch(\"*[_type=='homePage'][0]{'title':seo.metaTitle}\").then(data => {\n        const title = data?.title;\n        if (title && !value) {\n          onChange(set(title));\n        }\n      });\n    };\n    fetchData();\n  }, [client, onChange, value]);\n\n  const getWordCount = (title: string) => {\n    return title.trim().split(/\\s+/).length;\n  };\n\n  const getTitleFeedback = (title: string) => {\n    const wordCount = getWordCount(title);\n    if (wordCount === 1) {\n      return { text: 'Please add some content.', color: 'red' };\n    }\n    if (wordCount >= 1 && wordCount <= 2) {\n      return {\n        text: `The text contains ${wordCount} words. This is below the recommended minimum of 1 words. Add more content.`,\n        color: 'red'\n      };\n    }\n    if (wordCount >= 3 && wordCount <= 8) {\n      return {\n        text: `The text contains ${wordCount} words. This is slightly below the recommended minimum of 8 words. Add more content.`,\n        color: 'orange'\n      };\n    }\n    return { text: `The text contains ${wordCount} words. Good job!`, color: 'green' };\n  };\n\n  const { text, color } = getTitleFeedback(value || '');\n\n  return (\n    <Stack space={3}>\n      {renderDefault(props)}\n      <div style={{ display: 'flex', alignItems: 'center', gap: '7px' }}>\n        <div style={{ minWidth: '15px' }}>\n          <div\n            style={{\n              width: '10px',\n              height: '10px',\n              backgroundColor: color,\n              borderRadius: '50%'\n            }}\n          />\n        </div>\n        <Text weight=\"bold\" muted size={14}>\n          Text length: {text}\n        </Text>\n      </div>\n    </Stack>\n  );\n};\n\nexport default SEOFeedback;\n","import { StringInputProps, useClient, set } from 'sanity';\nimport { useEffect } from 'react';\nimport { Stack, Text } from '@sanity/ui';\n\nconst SEODescriptionFeedback = (props: StringInputProps) => {\n  const { onChange, value, renderDefault } = props;\n  const client = useClient({ apiVersion: '2021-06-07' });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await client\n        .fetch(\"*[_type=='homePage'][0]{'description':seo.metaDescription}\")\n        .then(data => {\n          const description = data?.description;\n          if (description && !value) {\n            onChange(set(description));\n          }\n        });\n    };\n    fetchData();\n  }, [client, onChange, value]);\n\n  const getWordCount = (title: string) => {\n    return title.trim().split(/\\s+/).length;\n  };\n\n  const getTitleFeedback = (title: string) => {\n    const wordCount = getWordCount(title);\n    if (wordCount === 1) {\n      return {\n        text: 'No meta description has been specified. Search engines will display copy from the page instead. Make sure to write one!',\n        color: 'red'\n      };\n    }\n    if (wordCount <= 20) {\n      return {\n        text: `The meta description is too short (under ${wordCount} characters). Up to 60 characters are available. Use the space!`,\n        color: 'orange'\n      };\n    }\n    return { text: `Well done!`, color: 'green' };\n  };\n\n  const { text, color } = getTitleFeedback(value || '');\n\n  return (\n    <Stack space={3}>\n      {renderDefault(props)}\n      <div style={{ display: 'flex', alignItems: 'center', gap: '7px' }}>\n        <div style={{ minWidth: '15px' }}>\n          <div\n            style={{\n              width: '10px',\n              height: '10px',\n              backgroundColor: color,\n              borderRadius: '50%'\n            }}\n          />\n        </div>\n        <Text weight=\"bold\" muted size={14}>\n          Meta description length: {text}\n        </Text>\n      </div>\n    </Stack>\n  );\n};\n\nexport default SEODescriptionFeedback;\n","import { defineType } from 'sanity';\nimport SEOTitleFeedback from '../components/SEOTitleFeedback';\nimport SEODescriptionFeedback from '../components/SEODescriptionFeedback';\n\nconst schema = defineType({\n  title: 'Seo MetaFields',\n  name: 'seoMetaFields',\n  type: 'object',\n  fields: [\n    {\n      name: 'nofollowAttributes',\n      title: 'Index',\n      type: 'boolean',\n      initialValue: false,\n      description:\n        \"To prevent a URL from being indexed, you'll also need to select the true index on the tag.\"\n    },\n    {\n      name: 'metaTitle',\n      title: 'Title',\n      type: 'string',\n      components: {\n        input: SEOTitleFeedback\n      }\n    },\n    {\n      name: 'metaDescription',\n      title: 'Description',\n      type: 'string',\n      components: {\n        input: SEODescriptionFeedback\n      }\n    },\n    {\n      name: 'seoKeywords',\n      title: 'Keywords',\n      type: 'array',\n      of: [{ type: 'string' }]\n    },\n    {\n      name: 'openGraph',\n      title: 'Open Graph',\n      type: 'openGraph'\n    },\n    {\n      name: 'additionalMetaTags',\n      title: 'Additional Meta Tags',\n      type: 'array',\n      of: [{ type: 'metaTag' }]\n    },\n    {\n      name: 'twitter',\n      title: 'Twitter',\n      type: 'twitter'\n    }\n  ]\n});\n\nexport default schema;\n","import { SchemaTypeDefinition } from 'sanity';\n\nexport default {\n  name: 'metaAttribute',\n  title: 'Meta Attribute',\n  type: 'object',\n  fields: [\n    {\n      name: 'attributeKey',\n      title: 'Key',\n      type: 'string'\n    },\n    {\n      name: 'attributeType',\n      title: 'type',\n      type: 'string',\n      options: {\n        list: ['string', 'image'],\n        layout: 'radio',\n        direction: 'horizontal'\n      },\n      initialValue: 'image'\n    },\n    {\n      name: 'attributeValueImage',\n      title: 'Value',\n      type: 'image',\n      hidden: ({ parent }) => parent?.attributeType !== 'image'\n    },\n    {\n      name: 'attributeValueString',\n      title: 'Value',\n      type: 'string',\n      hidden: ({ parent }) => parent?.attributeType !== 'string'\n    }\n  ],\n  preview: {\n    select: {\n      title: 'attributeKey'\n    },\n    prepare({ title }) {\n      return {\n        title\n      };\n    }\n  }\n} as SchemaTypeDefinition;\n","import { SchemaTypeDefinition } from 'sanity';\n\nexport default {\n  name: 'metaTag',\n  title: 'Meta tag',\n  type: 'object',\n  fields: [\n    {\n      name: 'metaAttributes',\n      title: 'Meta Attributes',\n      type: 'array',\n      of: [{ type: 'metaAttribute' }]\n    }\n  ],\n  preview: {\n    select: {\n      title: 'attributeName',\n      metaTags: 'metaAttributes'\n    },\n    prepare({ metaTags }) {\n      return {\n        title:\n          metaTags && metaTags[0]?.attributeValueString\n            ? metaTags[0]?.attributeValueString\n            : 'Meta Tag'\n      };\n    }\n  }\n} as SchemaTypeDefinition;\n","import SEODescriptionFeedback from '../../../../../components/SEODescriptionFeedback';\nimport SEOTitleFeedback from '../../../../../components/SEOTitleFeedback';\n\nexport default {\n  name: 'openGraph',\n  title: 'Open Graph',\n  type: 'object',\n  fields: [\n    {\n      name: 'url',\n      title: 'URL',\n      type: 'string'\n    },\n    {\n      name: 'image',\n      title: 'Image',\n      type: 'image'\n    },\n    {\n      name: 'title',\n      title: 'Title',\n      type: 'string',\n      components: {\n        input: SEOTitleFeedback\n      }\n    },\n    {\n      name: 'description',\n      title: 'Description',\n      type: 'string',\n      components: {\n        input: SEODescriptionFeedback\n      }\n    },\n    {\n      name: 'siteName',\n      title: 'Site Name',\n      type: 'string'\n    }\n  ]\n};\n","export default {\n  name: 'twitter',\n  title: 'Twitter',\n  type: 'object',\n  fields: [\n    {\n      name: 'cardType',\n      title: 'CardType',\n      type: 'string'\n    },\n    {\n      name: 'creator',\n      title: 'Creator',\n      type: 'string'\n    },\n    {\n      name: 'site',\n      title: 'Site',\n      type: 'string'\n    },\n    {\n      name: 'handle',\n      title: 'Handle',\n      type: 'string'\n    }\n  ]\n};\n","import schema from '../Schema';\nimport metaAttribute from './seo/list/metaAttribute';\nimport metaTag from './seo/list/metaTag';\nimport openGraph from './seo/list/openGraph';\nimport twitter from './seo/list/twitter';\n\nconst types = [schema, metaAttribute, metaTag, openGraph, twitter];\n\nexport default types;\n","import { definePlugin } from 'sanity';\nimport types from './schemas/types';\n\nconst seoMetaFields = definePlugin(() => {\n  return {\n    name: 'sanity-plugin-seo',\n    schema: { types }\n  };\n});\n\nexport default seoMetaFields;\n"],"names":["SEOFeedback","props","onChange","value","renderDefault","client","useClient","apiVersion","useEffect","fetchData","fetch","then","data","title","set","getWordCount","trim","split","length","getTitleFeedback","wordCount","text","color","concat","jsxs","Stack","space","children","style","display","alignItems","gap","jsx","minWidth","width","height","backgroundColor","borderRadius","Text","weight","muted","size","SEODescriptionFeedback","description","schema","defineType","name","type","fields","initialValue","components","input","SEOTitleFeedback","of","metaAttribute","options","list","layout","direction","hidden","_ref","parent","attributeType","_ref2","preview","select","prepare","_ref3","metaTag","metaTags","_ref4","_a","_b","attributeValueString","openGraph","twitter","types","seoMetaFields","definePlugin"],"mappings":";;;;;;;;;AAIA,MAAMA,WAAA,GAAeC,KAA4B,IAAA;EAC/C,MAAM;IAAEC,QAAA;IAAUC,KAAO;IAAAC;EAAA,CAAkB,GAAAH,KAAA;EAC3C,MAAMI,MAAS,GAAAC,MAAA,CAAAA,SAAA,CAAU;IAAEC,UAAA,EAAY;EAAc,CAAA,CAAA;EAErDC,KAAAA,CAAAA,SAAA,CAAU,MAAM;IACd,MAAMC,YAAY,MAAAA,CAAA,KAAY;MAC5B,MAAMJ,MAAO,CAAAK,KAAA,CAAM,gDAAgD,CAAA,CAAEC,KAAaC,IAAA,IAAA;QAChF,MAAMC,QAAQD,IAAM,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAAC,KAAA;QAChB,IAAAA,KAAA,IAAS,CAACV,KAAO,EAAA;UACVD,QAAA,CAAAY,MAAAA,CAAAA,GAAA,CAAID,KAAK,CAAC,CAAA;QACrB;MAAA,CACD,CAAA;IAAA,CACH;IACUJ,SAAA,EAAA;EACT,CAAA,EAAA,CAACJ,MAAQ,EAAAH,QAAA,EAAUC,KAAK,CAAC,CAAA;EAEtB,MAAAY,YAAA,GAAgBF,KAAkB,IAAA;IACtC,OAAOA,KAAM,CAAAG,IAAA,CAAO,CAAA,CAAAC,KAAA,CAAM,KAAK,CAAE,CAAAC,MAAA;EAAA,CACnC;EAEM,MAAAC,gBAAA,GAAoBN,KAAkB,IAAA;IACpC,MAAAO,SAAA,GAAYL,aAAaF,KAAK,CAAA;IACpC,IAAIO,cAAc,CAAG,EAAA;MACnB,OAAO;QAAEC,IAAA,EAAM,0BAA4B;QAAAC,KAAA,EAAO;MAAM,CAAA;IAC1D;IACI,IAAAF,SAAA,IAAa,CAAK,IAAAA,SAAA,IAAa,CAAG,EAAA;MAC7B,OAAA;QACLC,IAAA,EAAM,qBAAqBE,MAAS,CAAAH,SAAA,EAAA,6EAAA,CAAA;QACpCE,KAAO,EAAA;MAAA,CACT;IACF;IACI,IAAAF,SAAA,IAAa,CAAK,IAAAA,SAAA,IAAa,CAAG,EAAA;MAC7B,OAAA;QACLC,IAAA,EAAM,qBAAqBE,MAAS,CAAAH,SAAA,EAAA,sFAAA,CAAA;QACpCE,KAAO,EAAA;MAAA,CACT;IACF;IACA,OAAO;MAAED,IAAM,EAAA,oBAAA,CAAqBE,MAAS,CAAAH,SAAA,EAAA,mBAAA,CAAA;MAAqBE,OAAO;KAAQ;EAAA,CACnF;EAEA,MAAM;IAAED,IAAM;IAAAC;EAAA,CAAU,GAAAH,gBAAA,CAAiBhB,SAAS,EAAE,CAAA;EAGlD,OAAA,eAAAqB,UAAA,CAAAA,IAAA,CAACC,EAAM,CAAAA,KAAA,EAAA;IAAAC,KAAA,EAAO,CACX;IAAAC,QAAA,EAAA,CAAAvB,aAAA,CAAcH,KAAK,CAAA,EACpBuB,eAAAA,UAAAA,CAAAA,IAAA,CAAC,KAAI,EAAA;MAAAI,KAAA,EAAO;QAAEC,OAAA,EAAS;QAAQC,UAAY,EAAA,QAAA;QAAUC,GAAK,EAAA;MAAA,CACxD;MAAAJ,QAAA,EAAA,CAAA,eAAAK,UAAA,CAAAA,GAAA,CAAC,KAAI,EAAA;QAAAJ,KAAA,EAAO;UAAEK,QAAA,EAAU;SACtB;QAAAN,QAAA,iBAAAK,UAAA,CAAAA,GAAA,CAAC,KAAA,EAAA;UACCJ,KAAO,EAAA;YACLM,KAAO,EAAA,MAAA;YACPC,MAAQ,EAAA,MAAA;YACRC,eAAiB,EAAAd,KAAA;YACjBe,YAAc,EAAA;UAChB;QAAA,CAAA;OAEJ,CAAA,EAAA,+BACCC,EAAAA,CAAAA,IAAK,EAAA;QAAAC,MAAA,EAAO;QAAOC,KAAK,EAAA,IAAA;QAACC,MAAM,EAAI;QAAAd,QAAA,EAAA,CAAA,eAAA,EACpBN,IAAA;OAChB,CAAA;KACF,CAAA;EACF,CAAA,CAAA;AAEJ,CAAA;AC9DA,MAAMqB,sBAAA,GAA0BzC,KAA4B,IAAA;EAC1D,MAAM;IAAEC,QAAA;IAAUC,KAAO;IAAAC;EAAA,CAAkB,GAAAH,KAAA;EAC3C,MAAMI,MAAS,GAAAC,MAAA,CAAAA,SAAA,CAAU;IAAEC,UAAA,EAAY;EAAc,CAAA,CAAA;EAErDC,KAAAA,CAAAA,SAAA,CAAU,MAAM;IACd,MAAMC,YAAY,MAAAA,CAAA,KAAY;MAC5B,MAAMJ,MACH,CAAAK,KAAA,CAAM,4DAA4D,CAAA,CAClEC,KAAaC,IAAA,IAAA;QACZ,MAAM+B,cAAc/B,IAAM,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAA+B,WAAA;QACtB,IAAAA,WAAA,IAAe,CAACxC,KAAO,EAAA;UAChBD,QAAA,CAAAY,MAAAA,CAAAA,GAAA,CAAI6B,WAAW,CAAC,CAAA;QAC3B;MAAA,CACD,CAAA;IAAA,CACL;IACUlC,SAAA,EAAA;EACT,CAAA,EAAA,CAACJ,MAAQ,EAAAH,QAAA,EAAUC,KAAK,CAAC,CAAA;EAEtB,MAAAY,YAAA,GAAgBF,KAAkB,IAAA;IACtC,OAAOA,KAAM,CAAAG,IAAA,CAAO,CAAA,CAAAC,KAAA,CAAM,KAAK,CAAE,CAAAC,MAAA;EAAA,CACnC;EAEM,MAAAC,gBAAA,GAAoBN,KAAkB,IAAA;IACpC,MAAAO,SAAA,GAAYL,aAAaF,KAAK,CAAA;IACpC,IAAIO,cAAc,CAAG,EAAA;MACZ,OAAA;QACLC,IAAM,EAAA,yHAAA;QACNC,KAAO,EAAA;MAAA,CACT;IACF;IACA,IAAIF,aAAa,EAAI,EAAA;MACZ,OAAA;QACLC,IAAA,EAAM,4CAA4CE,MAAS,CAAAH,SAAA,EAAA,iEAAA,CAAA;QAC3DE,KAAO,EAAA;MAAA,CACT;IACF;IACA,OAAO;MAAED,IAAA,EAAM,YAAc;MAAAC,KAAA,EAAO;IAAQ,CAAA;EAAA,CAC9C;EAEA,MAAM;IAAED,IAAM;IAAAC;EAAA,CAAU,GAAAH,gBAAA,CAAiBhB,SAAS,EAAE,CAAA;EAGlD,OAAA,eAAAqB,UAAA,CAAAA,IAAA,CAACC,EAAM,CAAAA,KAAA,EAAA;IAAAC,KAAA,EAAO,CACX;IAAAC,QAAA,EAAA,CAAAvB,aAAA,CAAcH,KAAK,CAAA,EACpBuB,eAAAA,UAAAA,CAAAA,IAAA,CAAC,KAAI,EAAA;MAAAI,KAAA,EAAO;QAAEC,OAAA,EAAS;QAAQC,UAAY,EAAA,QAAA;QAAUC,GAAK,EAAA;MAAA,CACxD;MAAAJ,QAAA,EAAA,CAAA,eAAAK,UAAA,CAAAA,GAAA,CAAC,KAAI,EAAA;QAAAJ,KAAA,EAAO;UAAEK,QAAA,EAAU;SACtB;QAAAN,QAAA,iBAAAK,UAAA,CAAAA,GAAA,CAAC,KAAA,EAAA;UACCJ,KAAO,EAAA;YACLM,KAAO,EAAA,MAAA;YACPC,MAAQ,EAAA,MAAA;YACRC,eAAiB,EAAAd,KAAA;YACjBe,YAAc,EAAA;UAChB;QAAA,CAAA;OAEJ,CAAA,EAAA,+BACCC,EAAAA,CAAAA,IAAK,EAAA;QAAAC,MAAA,EAAO;QAAOC,KAAK,EAAA,IAAA;QAACC,MAAM,EAAI;QAAAd,QAAA,EAAA,CAAA,2BAAA,EACRN,IAAA;OAC5B,CAAA;KACF,CAAA;EACF,CAAA,CAAA;AAEJ,CAAA;AC7DA,MAAMuB,SAASC,MAAAA,CAAAA,UAAW,CAAA;EACxBhC,KAAO,EAAA,gBAAA;EACPiC,IAAM,EAAA,eAAA;EACNC,IAAM,EAAA,QAAA;EACNC,MAAQ,EAAA,CACN;IACEF,IAAM,EAAA,oBAAA;IACNjC,KAAO,EAAA,OAAA;IACPkC,IAAM,EAAA,SAAA;IACNE,YAAc,EAAA,KAAA;IACdN,WACE,EAAA;EACJ,CAAA,EACA;IACEG,IAAM,EAAA,WAAA;IACNjC,KAAO,EAAA,OAAA;IACPkC,IAAM,EAAA,QAAA;IACNG,UAAY,EAAA;MACVC,KAAO,EAAAC;IACT;EACF,CAAA,EACA;IACEN,IAAM,EAAA,iBAAA;IACNjC,KAAO,EAAA,aAAA;IACPkC,IAAM,EAAA,QAAA;IACNG,UAAY,EAAA;MACVC,KAAO,EAAAT;IACT;EACF,CAAA,EACA;IACEI,IAAM,EAAA,aAAA;IACNjC,KAAO,EAAA,UAAA;IACPkC,IAAM,EAAA,OAAA;IACNM,EAAI,EAAA,CAAC;MAAEN,IAAA,EAAM;KAAU;EACzB,CAAA,EACA;IACED,IAAM,EAAA,WAAA;IACNjC,KAAO,EAAA,YAAA;IACPkC,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,oBAAA;IACNjC,KAAO,EAAA,sBAAA;IACPkC,IAAM,EAAA,OAAA;IACNM,EAAI,EAAA,CAAC;MAAEN,IAAA,EAAM;KAAW;EAC1B,CAAA,EACA;IACED,IAAM,EAAA,SAAA;IACNjC,KAAO,EAAA,SAAA;IACPkC,IAAM,EAAA;EACR,CAAA;AAEJ,CAAC,CAAA;ACtDD,IAAeO,aAAA,GAAA;EACbR,IAAM,EAAA,eAAA;EACNjC,KAAO,EAAA,gBAAA;EACPkC,IAAM,EAAA,QAAA;EACNC,MAAQ,EAAA,CACN;IACEF,IAAM,EAAA,cAAA;IACNjC,KAAO,EAAA,KAAA;IACPkC,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,eAAA;IACNjC,KAAO,EAAA,MAAA;IACPkC,IAAM,EAAA,QAAA;IACNQ,OAAS,EAAA;MACPC,IAAA,EAAM,CAAC,QAAA,EAAU,OAAO,CAAA;MACxBC,MAAQ,EAAA,OAAA;MACRC,SAAW,EAAA;IACb,CAAA;IACAT,YAAc,EAAA;EAChB,CAAA,EACA;IACEH,IAAM,EAAA,qBAAA;IACNjC,KAAO,EAAA,OAAA;IACPkC,IAAM,EAAA,OAAA;IACNY,QAAQC,IAAA;MAAA,IAAC;QAAEC;MAAO,CAAA,GAAAD,IAAA;MAAA,OAAA,CAAMC,iCAAQC,aAAkB,MAAA,OAAA;IAAA;EACpD,CAAA,EACA;IACEhB,IAAM,EAAA,sBAAA;IACNjC,KAAO,EAAA,OAAA;IACPkC,IAAM,EAAA,QAAA;IACNY,QAAQI,KAAA;MAAA,IAAC;QAAEF;MAAO,CAAA,GAAAE,KAAA;MAAA,OAAA,CAAMF,iCAAQC,aAAkB,MAAA,QAAA;IAAA;EACpD,CAAA,CACF;EACAE,OAAS,EAAA;IACPC,MAAQ,EAAA;MACNpD,KAAO,EAAA;IACT,CAAA;IACAqD,OAAAA,CAAAC,KAAA,EAAmB;MAAA,IAAX;QAAEtD;OAAS,GAAAsD,KAAA;MACV,OAAA;QACLtD;MAAA,CACF;IACF;EACF;AACF,CAAA;AC5CA,IAAeuD,OAAA,GAAA;EACbtB,IAAM,EAAA,SAAA;EACNjC,KAAO,EAAA,UAAA;EACPkC,IAAM,EAAA,QAAA;EACNC,MAAQ,EAAA,CACN;IACEF,IAAM,EAAA,gBAAA;IACNjC,KAAO,EAAA,iBAAA;IACPkC,IAAM,EAAA,OAAA;IACNM,EAAI,EAAA,CAAC;MAAEN,IAAA,EAAM;KAAiB;EAChC,CAAA,CACF;EACAiB,OAAS,EAAA;IACPC,MAAQ,EAAA;MACNpD,KAAO,EAAA,eAAA;MACPwD,QAAU,EAAA;IACZ,CAAA;IACAH,OAAAA,CAAAI,KAAA,EAAsB;MAAA,IAAd;QAAED;OAAY,GAAAC,KAAA;MAnB1B,IAAAC,EAAA,EAAAC,EAAA;MAoBa,OAAA;QACL3D,KAAA,EACEwD,QAAY,KAAA,CAAAE,EAAA,GAAAF,QAAA,CAAS,CAAC,CAAA,KAAV,IAAa,GAAA,KAAA,CAAA,GAAAE,EAAA,CAAAE,oBAAA,CAAA,GAAA,CACrBD,EAAS,GAAAH,QAAA,CAAA,CAAC,CAAV,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAG,EAAA,CAAaC,oBACb,GAAA;MAAA,CACR;IACF;EACF;AACF,CAAA;ACzBA,IAAeC,SAAA,GAAA;EACb5B,IAAM,EAAA,WAAA;EACNjC,KAAO,EAAA,YAAA;EACPkC,IAAM,EAAA,QAAA;EACNC,MAAQ,EAAA,CACN;IACEF,IAAM,EAAA,KAAA;IACNjC,KAAO,EAAA,KAAA;IACPkC,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,OAAA;IACNjC,KAAO,EAAA,OAAA;IACPkC,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,OAAA;IACNjC,KAAO,EAAA,OAAA;IACPkC,IAAM,EAAA,QAAA;IACNG,UAAY,EAAA;MACVC,KAAO,EAAAC;IACT;EACF,CAAA,EACA;IACEN,IAAM,EAAA,aAAA;IACNjC,KAAO,EAAA,aAAA;IACPkC,IAAM,EAAA,QAAA;IACNG,UAAY,EAAA;MACVC,KAAO,EAAAT;IACT;EACF,CAAA,EACA;IACEI,IAAM,EAAA,UAAA;IACNjC,KAAO,EAAA,WAAA;IACPkC,IAAM,EAAA;EACR,CAAA;AAEJ,CAAA;ACxCA,IAAe4B,OAAA,GAAA;EACb7B,IAAM,EAAA,SAAA;EACNjC,KAAO,EAAA,SAAA;EACPkC,IAAM,EAAA,QAAA;EACNC,MAAQ,EAAA,CACN;IACEF,IAAM,EAAA,UAAA;IACNjC,KAAO,EAAA,UAAA;IACPkC,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,SAAA;IACNjC,KAAO,EAAA,SAAA;IACPkC,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,MAAA;IACNjC,KAAO,EAAA,MAAA;IACPkC,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,QAAA;IACNjC,KAAO,EAAA,QAAA;IACPkC,IAAM,EAAA;EACR,CAAA;AAEJ,CAAA;ACpBA,MAAM6B,QAAQ,CAAChC,MAAA,EAAQU,aAAe,EAAAc,OAAA,EAASM,WAAWC,OAAO,CAAA;ACH3D,MAAAE,aAAA,GAAgBC,oBAAa,MAAM;EAChC,OAAA;IACLhC,IAAM,EAAA,mBAAA;IACNF,MAAA,EAAQ;MAAEgC;IAAM;EAAA,CAClB;AACF,CAAC,CAAA;"}