{"version":3,"file":"index.esm.js","sources":["../src/schemas/Schema.ts","../src/schemas/types/seo/list/metaAttribute/index.ts","../src/schemas/types/seo/list/metaTag/index.ts","../src/schemas/types/seo/list/openGraph/index.ts","../src/schemas/types/seo/list/twitter/index.ts","../src/schemas/types/index.ts","../src/plugin.ts"],"sourcesContent":["import { defineType } from 'sanity';\n\nconst schema = defineType({\n  title: 'Seo MetaFields',\n  name: 'seoMetaFields',\n  type: 'object',\n  fields: [\n    {\n      name: 'metaTitle',\n      title: 'Title',\n      type: 'string'\n    },\n    {\n      name: 'metaDescription',\n      title: 'Description',\n      type: 'string'\n    },\n    {\n      name: 'additionalMetaTags',\n      title: 'Additional Meta Tags',\n      type: 'array',\n      of: [{ type: 'metaTag' }]\n    },\n    {\n      name: 'openGraph',\n      title: 'Open Graph',\n      type: 'openGraph'\n    },\n    {\n      name: 'twitter',\n      title: 'Twitter',\n      type: 'twitter'\n    }\n  ]\n});\n\nexport default schema;\n","import { SchemaTypeDefinition } from 'sanity';\n\nexport default {\n  name: 'metaAttribute',\n  title: 'Meta Attribute',\n  type: 'object',\n  fields: [\n    {\n      name: 'attributeKey',\n      title: 'Key',\n      type: 'string'\n    },\n    {\n      name: 'attributeType',\n      title: 'type',\n      type: 'string',\n      options: {\n        list: ['string', 'image'],\n        layout: 'radio',\n        direction: 'horizontal'\n      },\n      initialValue: 'image'\n    },\n    {\n      name: 'attributeValueImage',\n      title: 'Value',\n      type: 'image',\n      hidden: ({ parent }) => parent?.attributeType !== 'image'\n    },\n    {\n      name: 'attributeValueString',\n      title: 'Value',\n      type: 'string',\n      hidden: ({ parent }) => parent?.attributeType !== 'string'\n    }\n  ],\n  preview: {\n    select: {\n      title: 'attributeKey'\n    },\n    prepare({ title }) {\n      return {\n        title\n      };\n    }\n  }\n} as SchemaTypeDefinition;\n","import { SchemaTypeDefinition } from 'sanity';\n\nexport default {\n  name: 'metaTag',\n  title: 'Meta tag',\n  type: 'object',\n  fields: [\n    {\n      name: 'metaAttributes',\n      title: 'Meta Attributes',\n      type: 'array',\n      of: [{ type: 'metaAttribute' }]\n    }\n  ],\n  preview: {\n    select: {\n      title: 'attributeName',\n      metaTags: 'metaAttributes'\n    },\n    prepare({ metaTags }) {\n      return {\n        title:\n          metaTags && metaTags[0]?.attributeValueString\n            ? metaTags[0]?.attributeValueString\n            : 'Meta Tag'\n      };\n    }\n  }\n} as SchemaTypeDefinition;\n","export default {\n  name: 'openGraph',\n  title: 'Open Graph',\n  type: 'object',\n  fields: [\n    {\n      name: 'title',\n      title: 'Title',\n      type: 'string'\n    },\n    {\n      name: 'image',\n      title: 'Image',\n      type: 'image'\n    },\n    {\n      name: 'description',\n      title: 'Description',\n      type: 'string'\n    }\n  ]\n};\n","export default {\n  name: 'twitter',\n  title: 'Twitter',\n  type: 'object',\n  fields: [\n    {\n      name: 'handle',\n      title: 'Handle',\n      type: 'string'\n    },\n    {\n      name: 'site',\n      title: 'Site',\n      type: 'string'\n    },\n    {\n      name: 'cardType',\n      title: 'CardType',\n      type: 'string'\n    }\n  ]\n};\n","import schema from '../Schema';\nimport metaAttribute from './seo/list/metaAttribute';\nimport metaTag from './seo/list/metaTag';\nimport openGraph from './seo/list/openGraph';\nimport twitter from './seo/list/twitter';\n\nconst types = [schema, metaAttribute, metaTag, openGraph, twitter];\n\nexport default types;\n","import { definePlugin } from 'sanity';\nimport types from './schemas/types';\n\nconst seoMetaFields = definePlugin(() => {\n  return {\n    name: 'sanity-plugin-seo',\n    schema: { types }\n  };\n});\n\nexport default seoMetaFields;\n"],"names":["schema","defineType","title","name","type","fields","of","metaAttribute","options","list","layout","direction","initialValue","hidden","_ref","parent","attributeType","_ref2","preview","select","prepare","_ref3","metaTag","metaTags","_ref4","_a","_b","attributeValueString","openGraph","twitter","types","seoMetaFields","definePlugin"],"mappings":";AAEA,MAAMA,SAASC,UAAW,CAAA;EACxBC,KAAO,EAAA,gBAAA;EACPC,IAAM,EAAA,eAAA;EACNC,IAAM,EAAA,QAAA;EACNC,MAAQ,EAAA,CACN;IACEF,IAAM,EAAA,WAAA;IACND,KAAO,EAAA,OAAA;IACPE,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,iBAAA;IACND,KAAO,EAAA,aAAA;IACPE,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,oBAAA;IACND,KAAO,EAAA,sBAAA;IACPE,IAAM,EAAA,OAAA;IACNE,EAAI,EAAA,CAAC;MAAEF,IAAA,EAAM;KAAW;EAC1B,CAAA,EACA;IACED,IAAM,EAAA,WAAA;IACND,KAAO,EAAA,YAAA;IACPE,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,SAAA;IACND,KAAO,EAAA,SAAA;IACPE,IAAM,EAAA;EACR,CAAA;AAEJ,CAAC,CAAA;AChCD,IAAeG,aAAA,GAAA;EACbJ,IAAM,EAAA,eAAA;EACND,KAAO,EAAA,gBAAA;EACPE,IAAM,EAAA,QAAA;EACNC,MAAQ,EAAA,CACN;IACEF,IAAM,EAAA,cAAA;IACND,KAAO,EAAA,KAAA;IACPE,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,eAAA;IACND,KAAO,EAAA,MAAA;IACPE,IAAM,EAAA,QAAA;IACNI,OAAS,EAAA;MACPC,IAAA,EAAM,CAAC,QAAA,EAAU,OAAO,CAAA;MACxBC,MAAQ,EAAA,OAAA;MACRC,SAAW,EAAA;IACb,CAAA;IACAC,YAAc,EAAA;EAChB,CAAA,EACA;IACET,IAAM,EAAA,qBAAA;IACND,KAAO,EAAA,OAAA;IACPE,IAAM,EAAA,OAAA;IACNS,QAAQC,IAAA;MAAA,IAAC;QAAEC;MAAO,CAAA,GAAAD,IAAA;MAAA,OAAA,CAAMC,iCAAQC,aAAkB,MAAA,OAAA;IAAA;EACpD,CAAA,EACA;IACEb,IAAM,EAAA,sBAAA;IACND,KAAO,EAAA,OAAA;IACPE,IAAM,EAAA,QAAA;IACNS,QAAQI,KAAA;MAAA,IAAC;QAAEF;MAAO,CAAA,GAAAE,KAAA;MAAA,OAAA,CAAMF,iCAAQC,aAAkB,MAAA,QAAA;IAAA;EACpD,CAAA,CACF;EACAE,OAAS,EAAA;IACPC,MAAQ,EAAA;MACNjB,KAAO,EAAA;IACT,CAAA;IACAkB,OAAAA,CAAAC,KAAA,EAAmB;MAAA,IAAX;QAAEnB;OAAS,GAAAmB,KAAA;MACV,OAAA;QACLnB;MAAA,CACF;IACF;EACF;AACF,CAAA;AC5CA,IAAeoB,OAAA,GAAA;EACbnB,IAAM,EAAA,SAAA;EACND,KAAO,EAAA,UAAA;EACPE,IAAM,EAAA,QAAA;EACNC,MAAQ,EAAA,CACN;IACEF,IAAM,EAAA,gBAAA;IACND,KAAO,EAAA,iBAAA;IACPE,IAAM,EAAA,OAAA;IACNE,EAAI,EAAA,CAAC;MAAEF,IAAA,EAAM;KAAiB;EAChC,CAAA,CACF;EACAc,OAAS,EAAA;IACPC,MAAQ,EAAA;MACNjB,KAAO,EAAA,eAAA;MACPqB,QAAU,EAAA;IACZ,CAAA;IACAH,OAAAA,CAAAI,KAAA,EAAsB;MAAA,IAAd;QAAED;OAAY,GAAAC,KAAA;MAnB1B,IAAAC,EAAA,EAAAC,EAAA;MAoBa,OAAA;QACLxB,KAAA,EACEqB,QAAY,KAAA,CAAAE,EAAA,GAAAF,QAAA,CAAS,CAAC,CAAA,KAAV,IAAa,GAAA,KAAA,CAAA,GAAAE,EAAA,CAAAE,oBAAA,CAAA,GAAA,CACrBD,EAAS,GAAAH,QAAA,CAAA,CAAC,CAAV,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAG,EAAA,CAAaC,oBACb,GAAA;MAAA,CACR;IACF;EACF;AACF,CAAA;AC5BA,IAAeC,SAAA,GAAA;EACbzB,IAAM,EAAA,WAAA;EACND,KAAO,EAAA,YAAA;EACPE,IAAM,EAAA,QAAA;EACNC,MAAQ,EAAA,CACN;IACEF,IAAM,EAAA,OAAA;IACND,KAAO,EAAA,OAAA;IACPE,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,OAAA;IACND,KAAO,EAAA,OAAA;IACPE,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,aAAA;IACND,KAAO,EAAA,aAAA;IACPE,IAAM,EAAA;EACR,CAAA;AAEJ,CAAA;ACrBA,IAAeyB,OAAA,GAAA;EACb1B,IAAM,EAAA,SAAA;EACND,KAAO,EAAA,SAAA;EACPE,IAAM,EAAA,QAAA;EACNC,MAAQ,EAAA,CACN;IACEF,IAAM,EAAA,QAAA;IACND,KAAO,EAAA,QAAA;IACPE,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,MAAA;IACND,KAAO,EAAA,MAAA;IACPE,IAAM,EAAA;EACR,CAAA,EACA;IACED,IAAM,EAAA,UAAA;IACND,KAAO,EAAA,UAAA;IACPE,IAAM,EAAA;EACR,CAAA;AAEJ,CAAA;ACfA,MAAM0B,QAAQ,CAAC9B,MAAA,EAAQO,aAAe,EAAAe,OAAA,EAASM,WAAWC,OAAO,CAAA;ACH3D,MAAAE,aAAA,GAAgBC,aAAa,MAAM;EAChC,OAAA;IACL7B,IAAM,EAAA,mBAAA;IACNH,MAAA,EAAQ;MAAE8B;IAAM;EAAA,CAClB;AACF,CAAC,CAAA;"}